---
title: 'Títulos y etiquetas de ejes'
weight: 3
---


Las gráficas de **ggplot** son casi completamente personalizables. Esto te brinda la libertad de crear un diseño de gráfico que se ajuste perfectamente a tu informe, ensayo o artículo.

Esta página proporciona ayuda para agregar títulos, leyendas y etiquetas de ejes.

Antes de comenzar, lee la página sobre los [conceptos básicos](/graphics/ggplot/ggplot-basics/) de visualización con ggplot e instala el paquete ggplot2.


```{r,warning=F}
library(ggplot2)
```
  

![](ggplot1_basics_image.jpg)

En estos ejemplos, vamos a utilizar un conjunto de datos que ya está en R con la longitud y el ancho de las partes florales de tres especies de iris. Primero, carga el conjunto de datos:


```{r}
data(iris)
```

El siguiente código para un gráfico de dispersión de longitud del pétalo vs. longitud del sépalo, con las tres especies codificadas por colores, es la base que utilizaremos en este tutorial:

```{r, echo=TRUE}
IrisPlot <- ggplot(iris, aes(Sepal.Length, Petal.Length, colour = Species)) +
  geom_point()
```

```{r,echo=F}
print(IrisPlot)
```
  
### Agregar un título

Para agregar un título a tu gráfico, añade el código `+ggtitle("Tu título aquí")` a tu línea de código básico de ggplot. Asegúrate de utilizar comillas al inicio y al final de tu título.

```{r echo=TRUE}
print(IrisPlot + ggtitle("Petal and sepal length of iris"))
```

Si tienes un título especialmente largo que funcionaría mejor en dos líneas, utiliza `\n` para hacer un salto de línea. Asegúrate de utilizar la barra diagonal correcta.

```{r echo=TRUE}
print(IrisPlot + ggtitle("Petal and sepal length \nof three species of iris"))
```
  

### Cambiar las etiquetas de los ejes

Para modificar las etiquetas de los ejes, añade el código `+labs(y = "nombre del eje y", x = "nombre del eje x")` a tu línea de código básico de ggplot.


```{r echo=TRUE}
print(IrisPlot + labs(y = "Petal length (cm)", x = "Sepal length (cm)"))
```

Nota: También puedes usar `+labs(title = "Título")`, que es equivalente a `ggtitle`.

Por ejemplo:

```{r eval=F}
print(IrisPlot + labs(
  title = "Petal and Sepal Length \nof Iris",
  y = "Petal Length (cm)", x = "Sepal Length (cm)"
))
```
  

### Cambiar el título de la leyenda

De la misma manera que editaste el título y los nombres de los ejes, puedes modificar el título de la leyenda agregando `+labs(colour = "Título de la leyenda")` al final de tu código básico de trazado. 

Nota: Esto solo funcionará si realmente has añadido una variable adicional a tu código `aes` (en este caso, utilizando `color = Species` para agrupar los puntos por especie).

```{r}
IrisPlot <- ggplot(iris, aes(Sepal.Length, Petal.Length, colour = Species)) +
  geom_point()

print(IrisPlot + labs(colour = "Iris species"))
```

Nota: Si estás utilizando un histograma, diagrama de caja o gráfico de barras, es ligeramente diferente. Debes usar `fill` en lugar de `colour`.


```{r,eval =F}
IrisBox <- ggplot(iris, aes(Species, Sepal.Length, fill = Species)) +
  geom_boxplot()
print(IrisBox + labs(fill = "Iris species"))
```
  

### Modificando el estilo del texto en la leyenda, ejes o título
 
Se pueden modificar la fuente, color, tamaño y énfasis de las etiquetas y texto. Para hacer esto, utiliza el código `theme()` y personalízalo con `element_text()` para modificar estas propiedades.

El formato básico es: `mi_tema <- theme(tipo_de_título = element_text(tus_formatos))`

Donde "tipo_de_título" especifica qué texto en particular deseas editar. Estos pueden ser:

* título del gráfico. - `plot.title = element_text()`
* título del eje. - `axis.title = element_text()`
* título de la leyenda. - `legend.title = element_text()`
* categorías de la leyenda - `legend.text = element_text()`
* apariencia de los valores/números del eje. - `axis.text = element_text()`
  

**Opciones de formato**
La fuente, color, tamaño y énfasis de cualquiera de estas etiquetas se pueden modificar con argumentos dentro de `element_text(tu_formato)`.

* family. - el estilo de fuente. Ejemplos de fuentes incluyen: "Palatino", "Helvetica", "Courier", "Times". Puedes ver más opciones de fuente 
[aquí](http://www.cookbook-r.com/Graphs/Fonts/). Por ejemplo, `family = "Palatino"`
* face. - el tipo de énfasis, con opciones que incluyen **bold** (negrita), *italic* (cursiva) y "bold.italic" (negrita cursiva). Por ejemplo, `face = "bold.italic"`
* colour. - el color se puede cambiar a cualquiera de los colores listados [aquí](http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf). Recuerda incluir "" antes y después del nombre del color. Por ejemplo, `colour = "steelblue2"`.
* size. - el tamaño del texto, especificado con un número. Por ejemplo, `size = (3)`.
  

### Código de ejemplo
 
Aquí tienes un ejemplo de un tema que personaliza el título, la leyenda, las etiquetas de los ejes y especifica la fuente, énfasis, tamaño y color de cada uno de ellos. La figura se traza con este tema y con código adicional que proporciona el contenido del título y las etiquetas de los ejes:


```{r,warning=F}
mynamestheme <- theme(
  plot.title = element_text(family = "Helvetica", face = "bold", size = (15)),
  legend.title = element_text(colour = "steelblue", face = "bold.italic", family = "Helvetica"),
  legend.text = element_text(face = "italic", colour = "steelblue4", family = "Helvetica"),
  axis.title = element_text(family = "Helvetica", size = (10), colour = "steelblue4"),
  axis.text = element_text(family = "Courier", colour = "cornflowerblue", size = (10))
)

print(IrisPlot + mynamestheme + labs(title = "Petal and sepal \nlength of iris", y = "Petal length (cm)", x = "Sepal length (cm)"))
```
  

### Eliminación de una etiqueta
 
Otra opción es eliminar completamente el texto del gráfico. Para hacer esto, utiliza el código `= element_blank()`, recordando los paréntesis abiertos y cerrados. El siguiente código eliminaría el título de la leyenda y el texto del eje.


```{r,eval=F}
myblanktheme <- theme(
  plot.title = element_text(family = "Helvetica", face = "bold", size = (15)),
  legend.title = element_blank(),
  legend.text = element_text(face = "italic", colour = "steelblue4", family = "Helvetica"),
  axis.title = element_text(family = "Helvetica", size = (10), colour = "steelblue4"),
  axis.text = element_blank()
)

print(IrisPlot + myblanktheme + labs(title = "Petal and sepal \nlength of iris", y = "Petal length (cm)", x = "Sepal length (cm)"))
```
  
### Más ayuda

Para personalizar aún más la estética del gráfico, incluyendo el color y el formato, consulta nuestras otras páginas de ayuda de ggplot:
* [Modificar la apariencia general](/graphics/ggplot/ggplot-appearance/).
* [Colores y símbolos](/graphics/ggplot/ggplot-colour-shapes/).

Puedes encontrar ayuda sobre todas las funciones de ggplot en [el sitio principal de ayuda de ggplot](https://ggplot2.tidyverse.org).

Una hoja de referencia útil sobre las funciones comúnmente utilizadas se puede descargar [aquí](https://raw.githubusercontent.com/rstudio/cheatsheets/main/data-visualization.pdf).

<p style="margin-left: .5in; text-indent: -.5in;">Chang, W (2012) *R Graphics cookbook.* O'Reilly Media. - una guía de ggplot con bastante ayuda en línea [aquí](http://www.cookbook-r.com/Graphs/)</p>

**Autor**: Fiona Robinson

**Año**: 2016

**Última actualización**: `r format(Sys.time(), "%b %Y")`